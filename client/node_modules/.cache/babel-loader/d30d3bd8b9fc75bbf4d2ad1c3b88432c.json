{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userRedux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = () => configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["/Users/radojicapopovic/Documents/E-Commerce/client/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","cart","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,eAAxB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUE,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBH,EAAAA;AAHoB,CAAtB;AAMA,MAAMI,WAAW,GAAGf,eAAe,CAAC;AAACgB,EAAAA,IAAI,EAAEd,WAAP;AAAoBe,EAAAA,IAAI,EAAEhB;AAA1B,CAAD,CAAnC;AAEA,MAAMiB,gBAAgB,GAAGd,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAIA,OAAO,MAAMI,KAAK,GAAG,MAAMpB,cAAc,CAAC;AACxCqB,EAAAA,OAAO,EAAEF,gBAD+B;AAGxCG,EAAAA,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AAJoB,CAAD,CAAlC;AAWT,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA5B","sourcesContent":["import {configureStore, combineReducers} from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userRedux\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n  } from 'redux-persist'\n  import storage from 'redux-persist/lib/storage'\n\n  const persistConfig = {\n    key: 'root',\n    version: 1,\n    storage,\n  }\n\n  const rootReducer = combineReducers({user: userReducer, cart: cartReducer});\n  \n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n\n\n  export const store = () => configureStore({\n    reducer: persistedReducer,\n\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store)"]},"metadata":{},"sourceType":"module"}