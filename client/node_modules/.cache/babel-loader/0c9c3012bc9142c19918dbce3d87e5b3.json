{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, userReducer);\nexport default configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: persistReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(configureStore);","map":{"version":3,"sources":["/Users/radojicapopovic/Documents/E-Commerce/client/src/redux/store.js"],"names":["configureStore","cartReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","persistedReducer","userReducer","reducer","cart","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUE,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBH,EAAAA;AAHoB,CAAtB;AAMA,MAAMI,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBI,WAAhB,CAAvC;AAIA,eAAef,cAAc,CAAC;AAC5BgB,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEhB,WADD;AAELiB,IAAAA,IAAI,EAAEf;AAFD,GADmB;AAM5BgB,EAAAA,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAAClB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AAPQ,CAAD,CAA7B;AAcF,OAAO,IAAIc,SAAS,GAAGrB,YAAY,CAACF,cAAD,CAA5B","sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n  } from 'redux-persist'\n  import storage from 'redux-persist/lib/storage'\n\n  const persistConfig = {\n    key: 'root',\n    version: 1,\n    storage,\n  }\n  \n  const persistedReducer = persistReducer(persistConfig, userReducer)\n\n\n\n  export default configureStore({\n    reducer: {\n        cart: cartReducer,\n        user: persistReducer,\n    },\n\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(configureStore)"]},"metadata":{},"sourceType":"module"}